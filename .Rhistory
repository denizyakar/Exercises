havaK[, -which(names(havaK) == "Time")] <- lapply(havaK[, -which(names(havaK) == "Time")], as.numeric)
# <kodu tamamla>
library(dplyr)
# <kodu tamamla>
install.packages("dplyr")
library(dplyr)
havaK <- mutate_if(havaK, function(x) !is.POSIXct(x), as.numeric)
# <kodu tamamla>
numeric_columns <- names(havaK)[-which(names(havaK) == "Time")]
havaK[numeric_columns] <- lapply(havaK[numeric_columns], as.numeric)
head(havaK, 10)
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- read_excel("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
#  <kodu tamamla>
colnames(havaK)[which(colnames(havaK) == "Tarih")] <- "Time"
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time, format = "%Y-%m-%d %H:%M:%S")
# <kodu tamamla>
numeric_columns <- names(havaK)[-which(names(havaK) == "Time")]
havaK[numeric_columns] <- lapply(havaK[numeric_columns], as.numeric)
head(havaK, 10)
library(dygraphs)
#  <kodu tamamla>
install.packages("readxl")
install.packages("C:/Users/haruka/Downloads/Programs/rtools44-6104-6039.exe", repos = NULL)
library(devtools)
install devtools
install.packages("devtools")
find_rtools()
find_rtools()
install devtools
library(devtools)
library(devtools)
find_rtools()
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- read_excel("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- read_excel("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- read_excel("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
#  <kodu tamamla>
colnames(havaK)[which(colnames(havaK) == "Tarih")] <- "Time"
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time, format = "%Y-%m-%d %H:%M:%S")
# <kodu tamamla>
numeric_columns <- names(havaK)[-which(names(havaK) == "Time")]
havaK[numeric_columns] <- lapply(havaK[numeric_columns], as.numeric)
head(havaK, 10)
# <kodu tamamla>
numeric_columns <- names(havaK)[-which(names(havaK) == "Time")]
for (col in numeric_columns) {
havaK[[col]] <- as.numeric(as.character(havaK[[col]]))
}
head(havaK, 10)
# <kodu tamamla>
numeric_columns <- names(havaK)[-which(names(havaK) == "Time")]
for (col in numeric_columns) {
havaK[[col]] <- as.numeric(as.character(havaK[[col]]))
}
head(havaK, 10)
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time, format = "%d-%m-%Y %H:%M:%S")
# <kodu tamamla>
numeric_columns <- names(havaK)[-which(names(havaK) == "Time")]
for (col in numeric_columns) {
havaK[[col]] <- as.numeric(as.character(havaK[[col]]))
}
head(havaK, 10)
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time, format = "%D-%m-%Y %H:%M:%S")
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time, format = "%D-%m-%y %H:%M:%S")
# <kodu tamamla>
numeric_columns <- names(havaK)[-which(names(havaK) == "Time")]
for (col in numeric_columns) {
havaK[[col]] <- as.numeric(as.character(havaK[[col]]))
}
head(havaK, 10)
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time, format = "%d-%m-%Y %H:%M:%S")
# <kodu tamamla>
numeric_columns <- names(havaK)[-which(names(havaK) == "Time")]
for (col in numeric_columns) {
havaK[[col]] <- as.numeric(as.character(havaK[[col]]))
}
head(havaK, 10)
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time, format = "%d.%m.%Y %H:%M:%S")
# <kodu tamamla>
numeric_columns <- names(havaK)[-which(names(havaK) == "Time")]
for (col in numeric_columns) {
havaK[[col]] <- as.numeric(as.character(havaK[[col]]))
}
head(havaK, 10)
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time)
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- read_excel("C:\\Users\\haruka\\Desktop\\havaK.xlsx")
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- read_excel("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
install.packages("readxl")
#  <kodu tamamla>
colnames(havaK)[which(colnames(havaK) == "Tarih")] <- "Time"
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time)
# <kodu tamamla>
numeric_columns <- colnames(havaK)[-which(colnames(havaK) == "Time")]
havaK[, numeric_columns] <- lapply(havaK[, numeric_columns], as.numeric)
head(havaK, 10)
# <kodu tamamla>
numeric_columns <- names(havaK)[-which(names(havaK) == "Time")]
for (col in numeric_columns) {
havaK[[col]] <- as.numeric(as.character(havaK[[col]]))
}
head(havaK, 10)
colnames(havaK)
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- read_excel("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
#  <kodu tamamla>
colnames(havaK)[which(colnames(havaK) == "Tarih")] <- "Time"
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time)
# <kodu tamamla>
numeric_columns <- names(havaK)[-which(names(havaK) == "Time")]
for (col in numeric_columns) {
havaK[[col]] <- as.numeric(as.character(havaK[[col]]))
}
head(havaK, 10)
# <kodu tamamla>
install.packages("dplyr")
library(dplyr)
havaK <- mutate_at(havaK, vars(-Time), function(x) as.numeric(as.character(x)))
head(havaK, 10)
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- read_excel("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
#  <kodu tamamla>
colnames(havaK)[which(colnames(havaK) == "Tarih")] <- "Time"
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time)
# <kodu tamamla>
install.packages("dplyr")
library(dplyr)
havaK <- mutate_at(havaK, vars(-Time), function(x) as.numeric(as.character(x)))
head(havaK, 10)
install.packages("dygraphs")
library(dygraphs)
#  <kodu tamamla>
data_subset <- havaK[, c("Time", "SO2", "CO")]
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- read_excel("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
#  <kodu tamamla>
colnames(havaK)[which(colnames(havaK) == "Tarih")] <- "Time"
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time)
# <kodu tamamla>
install.packages("dplyr")
library(dplyr)
havaK <- mutate_at(havaK, vars(-Time), function(x) as.numeric(as.character(x)))
head(havaK, 10)
install.packages("dygraphs")
library(dygraphs)
#  <kodu tamamla>
data_subset <- havaK[, c("Time", "SO2", "CO")]
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- read_xl::read_xlsx("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
install.packages("readxl")
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- read_xl::read_xlsx("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- readxl::read_xlsx("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
install.packages("readxl")
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- readxl::read_xlsx("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
print(havaK)
#  <kodu tamamla>
colnames(havaK)[which(colnames(havaK) == "Tarih")] <- "Time"
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time)
# <kodu tamamla>
install.packages("dplyr")
library(dplyr)
havaK <- mutate_at(havaK, vars(-Time), function(x) as.numeric(as.character(x)))
head(havaK, 10)
# <kodu tamamla>
sutunlar <- colnames(havaK)[-which(colnames(havaK) == "Time")]
havaK[, sutunlar] <- lapply(havaK[, sutunlar], as.numeric)
print(head(havaK, 10))
### Zaman sütunu
Zaman değerlerini içeren sütunun isminin **Time** olmasını sağlayın
# <kodu tamamla>
sutunlar <- colnames(havaK)[-which(colnames(havaK) == "Time")]
print(head(havaK, 10))
havaK[, sutunlar] <- lapply(havaK[, sutunlar], as.numeric)
# <kodu tamamla>
sutunlar <- colnames(havaK)[-which(colnames(havaK) == "Time")]
havaK[, sutunlar] <- lapply(havaK[, sutunlar], as.numeric)
print(head(havaK, 10))
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function(x) {  # Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)  # Ondalık ayırıcıları noktaya çevir#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)  x <- gsub(",", ".", x)  # Sayısal değerlere dönüştür
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function(x) {
# Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)
# Ondalık ayırıcıları noktaya çevir#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)  x <- gsub(",", ".", x)
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function(x) {
# Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)
# Ondalık ayırıcıları noktaya çevir#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)  x <- gsub(",", ".", x)
# <kodu tamamla>
havaK_numeric[, -which(names(havaK) == "Time")] = lapply(havaK[, -which(names(havaK) == "Time")], function(x) as.numeric(gsub(",", ".", x)))
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function
(x) {
# Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)
# Ondalık ayırıcıları noktaya çevir
#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)
x <- gsub(",", ".", x)
# Sayısal değerlere dönüştür
as.numeric(x)})head(havaK, 10)
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function
(x) {
# Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)
# Ondalık ayırıcıları noktaya çevir
#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)
x <- gsub(",", ".", x)
# Sayısal değerlere dönüştür
as.numeric(x)})head(havaK, 10)
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function
(x) {
# Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)
# Ondalık ayırıcıları noktaya çevir
#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)
x <- gsub(",", ".", x)
# Sayısal değerlere dönüştür
as.numeric(x)})head(havaK, 10)
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function
(x) {
# Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)
# Ondalık ayırıcıları noktaya çevir
#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)
x <- gsub(",", ".", x)
# Sayısal değerlere dönüştür
as.numeric(x)})head(havaK, 10)
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function
(x) {
x <- gsub("[^0-9,]", "", x)
x <- gsub("-", "", x)
x <- gsub(",", ".", x)
as.numeric(x)})head(havaK, 10)
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- readxl::read_xlsx("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
print(havaK)
#  <kodu tamamla>
colnames(havaK)[which(colnames(havaK) == "Tarih")] <- "Time"
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time)
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function
(x) {
# Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)
# Ondalık ayırıcıları noktaya çevir
#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)
x <- gsub(",", ".", x)
# Sayısal değerlere dönüştür
as.numeric(x)})head(havaK, 10)
install.packages("readxl")
install.packages("readxl")
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- readxl::read_xlsx("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
print(havaK)
#  <kodu tamamla>
colnames(havaK)[which(colnames(havaK) == "Tarih")] <- "Time"
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time)
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function
(x) {
# Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)
# Ondalık ayırıcıları noktaya çevir
#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)
x <- gsub(",", ".", x)
# Sayısal değerlere dönüştür
as.numeric(x)})head(havaK, 10)
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function(x) {
# Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)
# Ondalık ayırıcıları noktaya çevir
#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)
x <- gsub(",", ".", x)
# Sayısal değerlere dönüştür
as.numeric(x)})head(havaK, 10)
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function(x) {
# Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)
# Ondalık ayırıcıları noktaya çevir
#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)
x <- gsub(",", ".", x)
# Sayısal değerlere dönüştür
as.numeric(x)})
head(havaK, 10)
install.packages("dygraphs")
library(dygraphs)
#  <kodu tamamla>
data_subset <- havaK[, c("Time", "SO2", "CO")]
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- readxl::read_xlsx("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
print(havaK)
#  <kodu tamamla>
colnames(havaK)[which(colnames(havaK) == "Tarih")] <- "Time"
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time)
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function(x) {
# Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)
# Ondalık ayırıcıları noktaya çevir
#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)
x <- gsub(",", ".", x)
# Sayısal değerlere dönüştür
as.numeric(x)})
head(havaK, 10)
install.packages("dygraphs")
library(dygraphs)
#  <kodu tamamla>
data_subset <- havaK[, c("Time", "PM10", "CO")]
dygraph(data_subset) %>%
dyAxis("y", "PM10", label = "PM10") %>%
dyAxis("y", "CO", label = "CO", independentTicks = TRUE) %>%
dySeries("PM10", label = "PM10") %>%
dySeries("CO", label = "CO") %>%
dyRangeSelector()
install.packages("dygraphs")
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- readxl::read_xlsx("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
print(havaK)
#  <kodu tamamla>
colnames(havaK)[which(colnames(havaK) == "Tarih")] <- "Time"
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time)
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function(x) {
# Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)
# Ondalık ayırıcıları noktaya çevir
#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)
x <- gsub(",", ".", x)
# Sayısal değerlere dönüştür
as.numeric(x)})
head(havaK, 10)
install.packages("dygraphs")
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- readxl::read_xlsx("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
print(havaK)
#  <kodu tamamla>
colnames(havaK)[which(colnames(havaK) == "Tarih")] <- "Time"
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time)
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function(x) {
# Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)
# Ondalık ayırıcıları noktaya çevir
#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)
x <- gsub(",", ".", x)
# Sayısal değerlere dönüştür
as.numeric(x)})
head(havaK, 10)
install.packages("dygraphs")
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- readxl::read_xlsx("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
print(havaK)
#  <kodu tamamla>
colnames(havaK)[which(colnames(havaK) == "Tarih")] <- "Time"
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time)
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function(x) {
# Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)
# Ondalık ayırıcıları noktaya çevir
#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)
x <- gsub(",", ".", x)
# Sayısal değerlere dönüştür
as.numeric(x)})
head(havaK, 10)
install.packages("dygraphs")
library(dygraphs)
#  <kodu tamamla>
data_subset <- havaK[, c("Time", "PM10", "CO")]
dygraph(data_subset) %>%
dyAxis("y", "PM10", label = "PM10") %>%
dyAxis("y", "CO", label = "CO", independentTicks = TRUE) %>%
dySeries("PM10", label = "PM10") %>%
dySeries("CO", label = "CO") %>%
dyRangeSelector()
colnames(havaK)
# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin
# havaK <- <kodu tamamla>
install.packages("readxl")
library(readxl)
havaK <- readxl::read_xlsx("C:\\Users\\haruka\\Desktop\\havaInfo.xlsx")
print(havaK)
#  <kodu tamamla>
colnames(havaK)[which(colnames(havaK) == "Tarih")] <- "Time"
# <kodu tamamla>
havaK$Time <- as.POSIXct(havaK$Time)
# <kodu tamamla>
havaK[-which(names(havaK) == "Time")] <- lapply(havaK[-which(names(havaK) == "Time")], function(x) {
# Sayısal olmayan karakterleri ve boşlukları temizle
x <- gsub("[^0-9,]", "", x)
# Ondalık ayırıcıları noktaya çevir
#- olanları boş yapalım ki NA çevrilsin
x <- gsub("-", "", x)
x <- gsub(",", ".", x)
# Sayısal değerlere dönüştür
as.numeric(x)})
head(havaK, 10)
install.packages("dygraphs")
library(dygraphs)
#  <kodu tamamla>
data_subset <- havaK[, c("Time", "PM10", "CO")]
dygraph(data_subset) %>%
dyAxis("y", "PM10", label = "PM10") %>%
dyAxis("y", "CO", label = "CO", independentTicks = TRUE) %>%
dySeries("PM10", label = "PM10") %>%
dySeries("CO", label = "CO") %>%
dyRangeSelector()
